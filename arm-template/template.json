{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "multimodal-airag",
      "metadata": { "description": "Name of the Web App." }
    },
    "dockerImage": {
      "type": "string",
      "defaultValue": "<docker-image-address>",
      "metadata": { "description": "Docker image name and tag." }
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": { "description": "Location for all resources." }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "multimodalkeyvaultrag",
      "metadata": { "description": "Name of the Key Vault." }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "<unique-storage-account-name>",
      "metadata": { "description": "Name of the Storage Account." }
    },
    "cosmosAccountName": {
      "type": "string",
      "defaultValue": "multimodal-cosmosrag",
      "metadata": { "description": "Name of the Cosmos DB account." }
    },
    "cognitiveServicesName": {
      "type": "string",
      "defaultValue": "multimodal-cognitivesRAG",
      "metadata": {
        "description": "Name of the Document Intelligence account."
      }
    },
    "userPrincipalId": {
      "type": "string",
      "defaultValue": "<your-principal-id>",
      "metadata": {
        "description": "Your user account's principal ID for Key Vault Secrets Officer role."
      }
    }
  },
  "variables": {
    "appServicePlanName": "[concat(parameters('appName'), '-plan')]",
    "managedIdentityName": "[concat(parameters('appName'), '-identity')]",
    "keyVaultSecretsUserRoleId": "4633458b-17de-408a-b874-0445c86b69e6",
    "secretsOfficerRoleId": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
    "uniqueString": "[uniqueString(resourceGroup().id, parameters('appName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "B1", "tier": "Basic" },
      "properties": { "reserved": true }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('managedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('appName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[concat('DOCKER|', parameters('dockerImage'))]",
          "appCommandLine": "gunicorn --bind 0.0.0.0:8000 app:app",
          "appSettings": [
            {
              "name": "KEYVAULT_URL",
              "value": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/')]"
            },
            { "name": "PORT", "value": "8000" },
            { "name": "WEBSITES_PORT", "value": "8000" },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "https://index.docker.io"
            },
            {
              "name": "AZURE_CLIENT_ID",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').clientId]"
            }
          ],
          "alwaysOn": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": { "family": "A", "name": "standard" },
        "tenantId": "[subscription().tenantId]",
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "enablePurgeProtection": true
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), variables('managedIdentityName'), variables('keyVaultSecretsUserRoleId'))]",
      "scope": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('keyVaultSecretsUserRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), parameters('userPrincipalId'), variables('secretsOfficerRoleId'))]",
      "scope": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('secretsOfficerRoleId'))]",
        "principalId": "[parameters('userPrincipalId')]",
        "principalType": "User"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[concat(parameters('keyVaultName'), '/DOC-INTELLIGENCE-ENDPOINT')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[concat('https://', parameters('location'), '.api.cognitive.microsoft.com/')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[concat(parameters('keyVaultName'), '/DOC-INTELLIGENCE-KEY')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServicesName'))]"
      ],
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServicesName')), '2023-05-01').key1]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[concat(parameters('keyVaultName'), '/BLOB-CONNECTION-STRING')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[concat(parameters('keyVaultName'), '/COSMOS-CONNECTION-STRING')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('cosmosAccountName'))]"
      ],
      "properties": {
        "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('cosmosAccountName')), '2023-04-15').connectionStrings[0].connectionString]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "Standard_LRS" },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/invoices')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": { "publicAccess": "None" }
    },
    {
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[parameters('cosmosAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          { "locationName": "[parameters('location')]", "failoverPriority": 0 }
        ],
        "capabilities": [{ "name": "EnableServerless" }]
      }
    },
    {
      "type": "Microsoft.DocumentDb/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[concat(parameters('cosmosAccountName'), '/InvoicesDB')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('cosmosAccountName'))]"
      ],
      "properties": { "resource": { "id": "InvoicesDB" } }
    },
    {
      "type": "Microsoft.DocumentDb/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[concat(parameters('cosmosAccountName'), '/InvoicesDB/ExtractedData')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDb/databaseAccounts/sqlDatabases', parameters('cosmosAccountName'), 'InvoicesDB')]"
      ],
      "properties": {
        "resource": {
          "id": "ExtractedData",
          "partitionKey": { "paths": ["/id"], "kind": "Hash" }
        }
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[parameters('cognitiveServicesName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "S0" },
      "kind": "FormRecognizer",
      "properties": {
        "publicNetworkAccess": "Enabled"
      }
    }
  ],
  "outputs": {
    "webAppUrl": {
      "type": "string",
      "value": "[concat('https://', parameters('appName'), '.azurewebsites.net')]"
    },
    "keyVaultUrl": {
      "type": "string",
      "value": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/')]"
    }
  }
}
